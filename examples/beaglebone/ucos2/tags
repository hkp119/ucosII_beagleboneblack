!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APP	makefile	/^APP=${ROOT}examples\/${EVM}\/$(APPDIR)\/$/;"	m
APPDIR	makefile	/^APPDIR=ucos2$/;"	m
APPNAME	makefile	/^APPNAME=app$/;"	m
APP_BIN	makefile	/^APP_BIN=${ROOT}\/examples\/${EVM}\/${APPDIR}\/BINARY\/$/;"	m
APP_LIB	makefile	/^APP_LIB=-ldrivers  \\$/;"	m
APP_SRC	makefile	/^APP_SRC=${UCOS-SRC}TEST.C$/;"	m
ARGET_MODE	makefile	/^	make TARGET_MODE=Release bin$/;"	m
ARM_SYS_MODE	UCOS-CPU/OS_CPU_C.C	11;"	d	file:
BOOLEAN	UCOS-INCLUDE/OS_CPU.H	/^typedef unsigned char  BOOLEAN;$/;"	t
BYTE	UCOS-INCLUDE/OS_CPU.H	45;"	d
CPU_ASM	makefile	/^CPU_ASM=$(UCOS-ARM)\/OS_CPU_A.S$/;"	m
CPU_SRC	makefile	/^CPU_SRC=$(UCOS-CPU)\/OS_CPU_C.C$/;"	m
DEBUG_LED	UCOS-SRC/TEST.C	/^static void DEBUG_LED(int x)$/;"	f	file:
DEVICE	makefile	/^DEVICE=am335x$/;"	m
DIRS	makefile	/^DIRS=${DRIVERS_BLD} ${PLATFORM_BLD} ${SYSCONFIG_BLD} ${UTILITY_BLD}$/;"	m
DISP_BASE	TRASH/PC.C	20;"	d	file:
DISP_BGND_BLACK	TRASH/PC.H	45;"	d
DISP_BGND_BLUE	TRASH/PC.H	46;"	d
DISP_BGND_BROWN	TRASH/PC.H	51;"	d
DISP_BGND_CYAN	TRASH/PC.H	48;"	d
DISP_BGND_GREEN	TRASH/PC.H	47;"	d
DISP_BGND_LIGHT_GRAY	TRASH/PC.H	52;"	d
DISP_BGND_PURPLE	TRASH/PC.H	50;"	d
DISP_BGND_RED	TRASH/PC.H	49;"	d
DISP_BLINK	TRASH/PC.H	54;"	d
DISP_FGND_BLACK	TRASH/PC.H	28;"	d
DISP_FGND_BLUE	TRASH/PC.H	29;"	d
DISP_FGND_BROWN	TRASH/PC.H	34;"	d
DISP_FGND_CYAN	TRASH/PC.H	31;"	d
DISP_FGND_DARK_GRAY	TRASH/PC.H	36;"	d
DISP_FGND_GREEN	TRASH/PC.H	30;"	d
DISP_FGND_LIGHT_BLUE	TRASH/PC.H	37;"	d
DISP_FGND_LIGHT_CYAN	TRASH/PC.H	39;"	d
DISP_FGND_LIGHT_GRAY	TRASH/PC.H	35;"	d
DISP_FGND_LIGHT_GREEN	TRASH/PC.H	38;"	d
DISP_FGND_LIGHT_PURPLE	TRASH/PC.H	41;"	d
DISP_FGND_LIGHT_RED	TRASH/PC.H	40;"	d
DISP_FGND_PURPLE	TRASH/PC.H	33;"	d
DISP_FGND_RED	TRASH/PC.H	32;"	d
DISP_FGND_WHITE	TRASH/PC.H	43;"	d
DISP_FGND_YELLOW	TRASH/PC.H	42;"	d
DISP_MAX_X	TRASH/PC.C	21;"	d	file:
DISP_MAX_Y	TRASH/PC.C	22;"	d	file:
Delay	UCOS-SRC/TEST.C	/^static void Delay(volatile unsigned int count)$/;"	f	file:
EVM	makefile	/^EVM=beaglebone$/;"	m
FALSE	UCOS-INCLUDE/uCOS_II.H	72;"	d
FP32	UCOS-INCLUDE/OS_CPU.H	/^typedef float          FP32;                     \/* Single precision floating point                    *\/$/;"	t
FP64	UCOS-INCLUDE/OS_CPU.H	/^typedef double         FP64;                     \/* Double precision floating point                    *\/$/;"	t
GPIO_INSTANCE_ADDRESS	UCOS-SRC/TEST.C	68;"	d	file:
GPIO_INSTANCE_PIN_NUMBER	UCOS-SRC/TEST.C	69;"	d	file:
IMG_LOAD_ADDR	makefile	/^IMG_LOAD_ADDR = 0x80000000$/;"	m
INT16S	UCOS-INCLUDE/OS_CPU.H	/^typedef signed   int   INT16S;                   \/* Signed   16 bit quantity                           *\/$/;"	t
INT16U	UCOS-INCLUDE/OS_CPU.H	/^typedef unsigned int   INT16U;                   \/* Unsigned 16 bit quantity                           *\/$/;"	t
INT32S	UCOS-INCLUDE/OS_CPU.H	/^typedef signed   long  INT32S;                   \/* Signed   32 bit quantity                           *\/$/;"	t
INT32U	UCOS-INCLUDE/OS_CPU.H	/^typedef unsigned long  INT32U;                   \/* Unsigned 32 bit quantity                           *\/$/;"	t
INT8S	UCOS-INCLUDE/OS_CPU.H	/^typedef signed   char  INT8S;                    \/* Signed    8 bit quantity                           *\/$/;"	t
INT8U	UCOS-INCLUDE/OS_CPU.H	/^typedef unsigned char  INT8U;                    \/* Unsigned  8 bit quantity                           *\/$/;"	t
LONG	UCOS-INCLUDE/OS_CPU.H	49;"	d
N_TASKS	TRASH/TEST.C	24;"	d	file:
OS2_SRC	makefile	/^OS2_SRC=$(UCOS-SRC)\/uCOS_II.C$/;"	m
OSAddr	UCOS-INCLUDE/uCOS_II.H	/^    void   *OSAddr;                    \/* Pointer to the beginning address of the memory partition     *\/$/;"	m	struct:__anon4
OSBlkSize	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSBlkSize;                 \/* Size (in bytes) of each memory block                         *\/$/;"	m	struct:__anon4
OSCPUUsage	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8S             OSCPUUsage;               \/* Percentage of CPU used                          *\/$/;"	v
OSCnt	UCOS-INCLUDE/uCOS_II.H	/^    INT16U  OSCnt;                          \/* Semaphore count                                         *\/$/;"	m	struct:__anon7
OSCtxSw	UCOS-ARM/OS_CPU_A.S	/^OSCtxSw:$/;"	l
OSCtxSwCtr	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT32U            OSCtxSwCtr;               \/* Counter of number of context switches           *\/$/;"	v
OSDebugInit	UCOS-CPU/OS_CPU_C.C	/^void OSDebugInit()  $/;"	f
OSDummy	UCOS-SRC/ETC/OS_CORE.C	/^void  OSDummy (void)$/;"	f
OSEventCnt	UCOS-INCLUDE/uCOS_II.H	/^    INT16U  OSEventCnt;                    \/* Semaphore Count (not used if other EVENT type)           *\/$/;"	m	struct:__anon1
OSEventFreeList	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_EVENT         *OSEventFreeList;          \/* Pointer to list of free EVENT control blocks    *\/$/;"	v
OSEventGrp	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSEventGrp;          \/* Group corresponding to tasks waiting for event to occur     *\/$/;"	m	struct:__anon6
OSEventGrp	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon5
OSEventGrp	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventGrp;                     \/* Group corresponding to tasks waiting for event to occur *\/$/;"	m	struct:__anon7
OSEventGrp	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon1
OSEventGrp	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventGrp;                    \/* Group corresponding to tasks waiting for event to occur  *\/$/;"	m	struct:__anon2
OSEventPtr	UCOS-INCLUDE/uCOS_II.H	/^    void   *OSEventPtr;                    \/* Pointer to message or queue structure                    *\/$/;"	m	struct:__anon1
OSEventTO	UCOS-SRC/ETC/OS_CORE.C	/^void  OSEventTO (OS_EVENT *pevent)$/;"	f
OSEventTaskRdy	UCOS-SRC/ETC/OS_CORE.C	/^INT8U  OSEventTaskRdy (OS_EVENT *pevent, void *msg, INT8U msk)$/;"	f
OSEventTaskWait	UCOS-SRC/ETC/OS_CORE.C	/^void  OSEventTaskWait (OS_EVENT *pevent)$/;"	f
OSEventTbl	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur         *\/$/;"	m	struct:__anon6
OSEventTbl	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon5
OSEventTbl	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE];  \/* List of tasks waiting for event to occur                *\/$/;"	m	struct:__anon7
OSEventTbl	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon1
OSEventTbl	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventTbl[OS_EVENT_TBL_SIZE]; \/* List of tasks waiting for event to occur                 *\/$/;"	m	struct:__anon2
OSEventTbl	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_EVENT          OSEventTbl[OS_MAX_EVENTS];\/* Table of EVENT control blocks                   *\/$/;"	v
OSEventType	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSEventType;                   \/* Type of event control block (see OS_EVENT_TYPE_???)      *\/$/;"	m	struct:__anon1
OSEventWaitListInit	UCOS-SRC/ETC/OS_CORE.C	/^void  OSEventWaitListInit (OS_EVENT *pevent)$/;"	f
OSFree	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSFree;                    \/* Number of free bytes on the stack                            *\/$/;"	m	struct:__anon8
OSFreeList	UCOS-INCLUDE/uCOS_II.H	/^    void   *OSFreeList;                \/* Pointer to the beginning of the free list of memory blocks   *\/$/;"	m	struct:__anon4
OSIdleCtr	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT32U            OSIdleCtr;                                 \/* Idle counter                   *\/$/;"	v
OSIdleCtrMax	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT32U            OSIdleCtrMax;             \/* Max. value that idle ctr can take in 1 sec.     *\/$/;"	v
OSIdleCtrRun	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT32U            OSIdleCtrRun;             \/* Val. reached by idle ctr at run time in 1 sec.  *\/$/;"	v
OSInit	UCOS-SRC/ETC/OS_CORE.C	/^void  OSInit (void)$/;"	f
OSInitHookBegin	UCOS-CPU/OS_CPU_C.C	/^void  OSInitHookBegin (void)$/;"	f
OSInitHookEnd	UCOS-CPU/OS_CPU_C.C	/^void  OSInitHookEnd (void)$/;"	f
OSIntCtxSw	UCOS-ARM/OS_CPU_A.S	/^OSIntCtxSw:$/;"	l
OSIntEnter	UCOS-SRC/ETC/OS_CORE.C	/^void  OSIntEnter (void)$/;"	f
OSIntExit	UCOS-SRC/ETC/OS_CORE.C	/^void  OSIntExit (void)$/;"	f
OSIntExitY	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSIntExitY;               \/* Variable used by OSIntExit() to prevent locals  *\/$/;"	v
OSIntNesting	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSIntNesting;             \/* Interrupt nesting level                         *\/$/;"	v
OSLockNesting	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSLockNesting;            \/* Multitasking lock nesting level                 *\/$/;"	v
OSMapTbl	UCOS-SRC/ETC/OS_CORE.C	/^INT8U  const  OSMapTbl[]   = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};$/;"	v
OSMboxAccept	UCOS-SRC/ETC/OS_MBOX.C	/^void  *OSMboxAccept (OS_EVENT *pevent)$/;"	f
OSMboxCreate	UCOS-SRC/ETC/OS_MBOX.C	/^OS_EVENT  *OSMboxCreate (void *msg)$/;"	f
OSMboxDel	UCOS-SRC/ETC/OS_MBOX.C	/^OS_EVENT  *OSMboxDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f
OSMboxPend	UCOS-SRC/ETC/OS_MBOX.C	/^void  *OSMboxPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f
OSMboxPost	UCOS-SRC/ETC/OS_MBOX.C	/^INT8U  OSMboxPost (OS_EVENT *pevent, void *msg)$/;"	f
OSMboxQuery	UCOS-SRC/ETC/OS_MBOX.C	/^INT8U  OSMboxQuery (OS_EVENT *pevent, OS_MBOX_DATA *pdata)$/;"	f
OSMemAddr	UCOS-INCLUDE/uCOS_II.H	/^    void   *OSMemAddr;                 \/* Pointer to beginning of memory partition                     *\/$/;"	m	struct:__anon3
OSMemBlkSize	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSMemBlkSize;              \/* Size (in bytes) of each block of memory                      *\/$/;"	m	struct:__anon3
OSMemCreate	UCOS-SRC/ETC/OS_MEM.C	/^OS_MEM  *OSMemCreate (void *addr, INT32U nblks, INT32U blksize, INT8U *err)$/;"	f
OSMemFreeList	UCOS-INCLUDE/uCOS_II.H	/^    void   *OSMemFreeList;             \/* Pointer to list of free memory blocks                        *\/$/;"	m	struct:__anon3
OSMemFreeList	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_MEM           *OSMemFreeList;            \/* Pointer to free list of memory partitions       *\/$/;"	v
OSMemGet	UCOS-SRC/ETC/OS_MEM.C	/^void  *OSMemGet (OS_MEM *pmem, INT8U *err)$/;"	f
OSMemInit	UCOS-SRC/ETC/OS_MEM.C	/^void  OSMemInit (void)$/;"	f
OSMemNBlks	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSMemNBlks;                \/* Total number of blocks in this partition                     *\/$/;"	m	struct:__anon3
OSMemNFree	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSMemNFree;                \/* Number of memory blocks remaining in this partition          *\/$/;"	m	struct:__anon3
OSMemPut	UCOS-SRC/ETC/OS_MEM.C	/^INT8U  OSMemPut (OS_MEM  *pmem, void *pblk)$/;"	f
OSMemQuery	UCOS-SRC/ETC/OS_MEM.C	/^INT8U  OSMemQuery (OS_MEM *pmem, OS_MEM_DATA *pdata)$/;"	f
OSMemTbl	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_MEM            OSMemTbl[OS_MAX_MEM_PART];\/* Storage for memory partition manager            *\/$/;"	v
OSMsg	UCOS-INCLUDE/uCOS_II.H	/^    void          *OSMsg;               \/* Pointer to next message to be extracted from queue          *\/$/;"	m	struct:__anon6
OSMsg	UCOS-INCLUDE/uCOS_II.H	/^    void   *OSMsg;                         \/* Pointer to message in mailbox                            *\/$/;"	m	struct:__anon2
OSMutexAccept	UCOS-SRC/ETC/OS_MUTEX.C	/^INT8U  OSMutexAccept (OS_EVENT *pevent, INT8U *err)$/;"	f
OSMutexCreate	UCOS-SRC/ETC/OS_MUTEX.C	/^OS_EVENT  *OSMutexCreate (INT8U prio, INT8U *err)$/;"	f
OSMutexDel	UCOS-SRC/ETC/OS_MUTEX.C	/^OS_EVENT  *OSMutexDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f
OSMutexPIP	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSMutexPIP;                     \/* Priority Inheritance Priority or 0xFF if no owner       *\/$/;"	m	struct:__anon5
OSMutexPend	UCOS-SRC/ETC/OS_MUTEX.C	/^void  OSMutexPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f
OSMutexPost	UCOS-SRC/ETC/OS_MUTEX.C	/^INT8U  OSMutexPost (OS_EVENT *pevent)$/;"	f
OSMutexQuery	UCOS-SRC/ETC/OS_MUTEX.C	/^INT8U  OSMutexQuery (OS_EVENT *pevent, OS_MUTEX_DATA *pdata)$/;"	f
OSNBlks	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSNBlks;                   \/* Total number of blocks in the partition                      *\/$/;"	m	struct:__anon4
OSNFree	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSNFree;                   \/* Number of memory blocks free                                 *\/$/;"	m	struct:__anon4
OSNMsgs	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSNMsgs;             \/* Number of messages in message queue                         *\/$/;"	m	struct:__anon6
OSNUsed	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSNUsed;                   \/* Number of memory blocks used                                 *\/$/;"	m	struct:__anon4
OSOwnerPrio	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSOwnerPrio;                    \/* Mutex owner's task priority or 0xFF if no owner         *\/$/;"	m	struct:__anon5
OSPrioCur	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSPrioCur;                \/* Priority of current task                        *\/$/;"	v
OSPrioHighRdy	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSPrioHighRdy;            \/* Priority of highest priority task               *\/$/;"	v
OSQAccept	UCOS-SRC/ETC/OS_Q.C	/^void  *OSQAccept (OS_EVENT *pevent)$/;"	f
OSQCreate	UCOS-SRC/ETC/OS_Q.C	/^OS_EVENT  *OSQCreate (void **start, INT16U size)$/;"	f
OSQDel	UCOS-SRC/ETC/OS_Q.C	/^OS_EVENT  *OSQDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f
OSQEnd	UCOS-INCLUDE/uCOS_II.H	/^    void         **OSQEnd;              \/* Pointer to end   of queue data                              *\/$/;"	m	struct:os_q
OSQEntries	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSQEntries;          \/* Current number of entries in the queue                      *\/$/;"	m	struct:os_q
OSQFlush	UCOS-SRC/ETC/OS_Q.C	/^INT8U  OSQFlush (OS_EVENT *pevent)$/;"	f
OSQFreeList	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_Q             *OSQFreeList;              \/* Pointer to list of free QUEUE control blocks    *\/$/;"	v
OSQIn	UCOS-INCLUDE/uCOS_II.H	/^    void         **OSQIn;               \/* Pointer to where next message will be inserted  in   the Q  *\/$/;"	m	struct:os_q
OSQInit	UCOS-SRC/ETC/OS_Q.C	/^void  OSQInit (void)$/;"	f
OSQOut	UCOS-INCLUDE/uCOS_II.H	/^    void         **OSQOut;              \/* Pointer to where next message will be extracted from the Q  *\/$/;"	m	struct:os_q
OSQPend	UCOS-SRC/ETC/OS_Q.C	/^void  *OSQPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f
OSQPost	UCOS-SRC/ETC/OS_Q.C	/^INT8U  OSQPost (OS_EVENT *pevent, void *msg)$/;"	f
OSQPostFront	UCOS-SRC/ETC/OS_Q.C	/^INT8U  OSQPostFront (OS_EVENT *pevent, void *msg)$/;"	f
OSQPtr	UCOS-INCLUDE/uCOS_II.H	/^    struct os_q   *OSQPtr;              \/* Link to next queue control block in list of free blocks     *\/$/;"	m	struct:os_q	typeref:struct:os_q::os_q
OSQQuery	UCOS-SRC/ETC/OS_Q.C	/^INT8U  OSQQuery (OS_EVENT *pevent, OS_Q_DATA *pdata)$/;"	f
OSQSize	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSQSize;             \/* Size of message queue                                       *\/$/;"	m	struct:__anon6
OSQSize	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSQSize;             \/* Size of queue (maximum number of entries)                   *\/$/;"	m	struct:os_q
OSQStart	UCOS-INCLUDE/uCOS_II.H	/^    void         **OSQStart;            \/* Pointer to start of queue data                              *\/$/;"	m	struct:os_q
OSQTbl	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_Q              OSQTbl[OS_MAX_QS];        \/* Table of QUEUE control blocks                   *\/$/;"	v
OSRdyGrp	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSRdyGrp;                        \/* Ready list group                         *\/$/;"	v
OSRdyTbl	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSRdyTbl[OS_RDY_TBL_SIZE];       \/* Table of tasks which are ready to run    *\/$/;"	v
OSRunning	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  BOOLEAN           OSRunning;                       \/* Flag indicating that kernel is running   *\/$/;"	v
OSSched	UCOS-SRC/ETC/OS_CORE.C	/^void  OSSched (void)$/;"	f
OSSchedLock	UCOS-SRC/ETC/OS_CORE.C	/^void  OSSchedLock (void)$/;"	f
OSSchedUnlock	UCOS-SRC/ETC/OS_CORE.C	/^void  OSSchedUnlock (void)$/;"	f
OSSemAccept	UCOS-SRC/ETC/OS_SEM.C	/^INT16U  OSSemAccept (OS_EVENT *pevent)$/;"	f
OSSemCreate	UCOS-SRC/ETC/OS_SEM.C	/^OS_EVENT  *OSSemCreate (INT16U cnt)$/;"	f
OSSemDel	UCOS-SRC/ETC/OS_SEM.C	/^OS_EVENT  *OSSemDel (OS_EVENT *pevent, INT8U opt, INT8U *err)$/;"	f
OSSemPend	UCOS-SRC/ETC/OS_SEM.C	/^void  OSSemPend (OS_EVENT *pevent, INT16U timeout, INT8U *err)$/;"	f
OSSemPost	UCOS-SRC/ETC/OS_SEM.C	/^INT8U  OSSemPost (OS_EVENT *pevent)$/;"	f
OSSemQuery	UCOS-SRC/ETC/OS_SEM.C	/^INT8U  OSSemQuery (OS_EVENT *pevent, OS_SEM_DATA *pdata)$/;"	f
OSStart	UCOS-SRC/ETC/OS_CORE.C	/^void  OSStart (void)$/;"	f
OSStartHighRdy	UCOS-ARM/OS_CPU_A.S	/^OSStartHighRdy:$/;"	l
OSStatInit	UCOS-SRC/ETC/OS_CORE.C	/^void  OSStatInit (void)$/;"	f
OSStatRdy	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  BOOLEAN           OSStatRdy;                \/* Flag indicating that the statistic task is rdy  *\/$/;"	v
OSTCBBitX	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSTCBBitX;          \/* Bit mask to access bit position in ready table               *\/$/;"	m	struct:os_tcb
OSTCBBitY	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSTCBBitY;          \/* Bit mask to access bit position in ready group               *\/$/;"	m	struct:os_tcb
OSTCBCur	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBCur;                        \/* Pointer to currently running TCB         *\/$/;"	v
OSTCBDelReq	UCOS-INCLUDE/uCOS_II.H	/^    BOOLEAN        OSTCBDelReq;        \/* Indicates whether a task needs to delete itself              *\/$/;"	m	struct:os_tcb
OSTCBDly	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSTCBDly;           \/* Nbr ticks to delay task or, timeout waiting for event        *\/$/;"	m	struct:os_tcb
OSTCBEventPtr	UCOS-INCLUDE/uCOS_II.H	/^    OS_EVENT      *OSTCBEventPtr;      \/* Pointer to event control block                               *\/$/;"	m	struct:os_tcb
OSTCBExtPtr	UCOS-INCLUDE/uCOS_II.H	/^    void          *OSTCBExtPtr;        \/* Pointer to user definable data for TCB extension             *\/$/;"	m	struct:os_tcb
OSTCBFreeList	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBFreeList;                   \/* Pointer to list of free TCBs             *\/$/;"	v
OSTCBHighRdy	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBHighRdy;                    \/* Pointer to highest priority TCB R-to-R   *\/$/;"	v
OSTCBId	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSTCBId;            \/* Task ID (0..65535)                                           *\/$/;"	m	struct:os_tcb
OSTCBInit	UCOS-SRC/ETC/OS_CORE.C	/^INT8U  OSTCBInit (INT8U prio, OS_STK *ptos, OS_STK *pbos, INT16U id, INT32U stk_size, void *pext, INT16U opt)$/;"	f
OSTCBInitHook	UCOS-CPU/OS_CPU_C.C	/^void  OSTCBInitHook (OS_TCB *ptcb)$/;"	f
OSTCBList	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBList;                       \/* Pointer to doubly linked list of TCBs    *\/$/;"	v
OSTCBMsg	UCOS-INCLUDE/uCOS_II.H	/^    void          *OSTCBMsg;           \/* Message received from OSMboxPost() or OSQPost()              *\/$/;"	m	struct:os_tcb
OSTCBNext	UCOS-INCLUDE/uCOS_II.H	/^    struct os_tcb *OSTCBNext;          \/* Pointer to next     TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb
OSTCBOpt	UCOS-INCLUDE/uCOS_II.H	/^    INT16U         OSTCBOpt;           \/* Task options as passed by OSTaskCreateExt()                  *\/$/;"	m	struct:os_tcb
OSTCBPrev	UCOS-INCLUDE/uCOS_II.H	/^    struct os_tcb *OSTCBPrev;          \/* Pointer to previous TCB in the TCB list                      *\/$/;"	m	struct:os_tcb	typeref:struct:os_tcb::os_tcb
OSTCBPrio	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSTCBPrio;          \/* Task priority (0 == highest, 63 == lowest)                   *\/$/;"	m	struct:os_tcb
OSTCBPrioTbl	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_TCB           *OSTCBPrioTbl[OS_LOWEST_PRIO + 1];\/* Table of pointers to created TCBs        *\/$/;"	v
OSTCBStat	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSTCBStat;          \/* Task status                                                  *\/$/;"	m	struct:os_tcb
OSTCBStkBottom	UCOS-INCLUDE/uCOS_II.H	/^    OS_STK        *OSTCBStkBottom;     \/* Pointer to bottom of stack                                   *\/$/;"	m	struct:os_tcb
OSTCBStkPtr	UCOS-INCLUDE/uCOS_II.H	/^    OS_STK        *OSTCBStkPtr;        \/* Pointer to current top of stack                              *\/$/;"	m	struct:os_tcb
OSTCBStkSize	UCOS-INCLUDE/uCOS_II.H	/^    INT32U         OSTCBStkSize;       \/* Size of task stack (in number of stack elements)             *\/$/;"	m	struct:os_tcb
OSTCBTbl	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_TCB            OSTCBTbl[OS_MAX_TASKS + OS_N_SYS_TASKS];   \/* Table of TCBs                  *\/$/;"	v
OSTCBX	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSTCBX;             \/* Bit position in group  corresponding to task priority (0..7) *\/$/;"	m	struct:os_tcb
OSTCBY	UCOS-INCLUDE/uCOS_II.H	/^    INT8U          OSTCBY;             \/* Index into ready table corresponding to task priority        *\/$/;"	m	struct:os_tcb
OSTaskChangePrio	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskChangePrio (INT8U oldprio, INT8U newprio)$/;"	f
OSTaskCreate	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskCreate (void (*task)(void *pd), void *pdata, OS_STK *ptos, INT8U prio)$/;"	f
OSTaskCreateExt	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskCreateExt (void   (*task)(void *pd),$/;"	f
OSTaskCreateHook	UCOS-CPU/OS_CPU_C.C	/^OSTaskCreateHook ($/;"	f
OSTaskCtr	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  INT8U             OSTaskCtr;                       \/* Number of tasks created                  *\/$/;"	v
OSTaskDel	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskDel (INT8U prio)$/;"	f
OSTaskDelHook	UCOS-CPU/OS_CPU_C.C	/^OSTaskDelHook ($/;"	f
OSTaskDelReq	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskDelReq (INT8U prio)$/;"	f
OSTaskIdle	UCOS-SRC/ETC/OS_CORE.C	/^void  OSTaskIdle (void *pdata)$/;"	f
OSTaskIdleHook	UCOS-CPU/OS_CPU_C.C	/^void  OSTaskIdleHook (void)$/;"	f
OSTaskIdleStk	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_STK            OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE];      \/* Idle task stack                *\/$/;"	v
OSTaskQuery	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskQuery (INT8U prio, OS_TCB *pdata)$/;"	f
OSTaskResume	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskResume (INT8U prio)$/;"	f
OSTaskReturnHook	UCOS-CPU/OS_CPU_C.C	/^void OSTaskReturnHook(OS_TCB *ptcb)   $/;"	f
OSTaskStat	UCOS-SRC/ETC/OS_CORE.C	/^void  OSTaskStat (void *pdata)$/;"	f
OSTaskStatHook	UCOS-CPU/OS_CPU_C.C	/^OSTaskStatHook ($/;"	f
OSTaskStatStk	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  OS_STK            OSTaskStatStk[OS_TASK_STAT_STK_SIZE];      \/* Statistics task stack          *\/$/;"	v
OSTaskStkChk	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskStkChk (INT8U prio, OS_STK_DATA *pdata)$/;"	f
OSTaskStkInit	UCOS-CPU/OS_CPU_C.C	/^OS_STK       *OSTaskStkInit(void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt)$/;"	f
OSTaskSuspend	UCOS-SRC/ETC/OS_TASK.C	/^INT8U  OSTaskSuspend (INT8U prio)$/;"	f
OSTaskSwHook	UCOS-CPU/OS_CPU_C.C	/^OSTaskSwHook ($/;"	f
OSTickDOSCtr	UCOS-INCLUDE/OS_CPU.H	/^OS_CPU_EXT  INT8U  OSTickDOSCtr;       \/* Counter used to invoke DOS's tick handler every 'n' ticks    *\/$/;"	v
OSTime	UCOS-INCLUDE/uCOS_II.H	/^OS_EXT  volatile  INT32U  OSTime;                   \/* Current value of system time (in ticks)         *\/$/;"	v
OSTimeDly	UCOS-SRC/ETC/OS_TIME.C	/^void  OSTimeDly (INT16U ticks)$/;"	f
OSTimeDlyHMSM	UCOS-SRC/ETC/OS_TIME.C	/^INT8U  OSTimeDlyHMSM (INT8U hours, INT8U minutes, INT8U seconds, INT16U milli)$/;"	f
OSTimeDlyResume	UCOS-SRC/ETC/OS_TIME.C	/^INT8U  OSTimeDlyResume (INT8U prio)$/;"	f
OSTimeGet	UCOS-SRC/ETC/OS_TIME.C	/^INT32U  OSTimeGet (void)$/;"	f
OSTimeSet	UCOS-SRC/ETC/OS_TIME.C	/^void  OSTimeSet (INT32U ticks)$/;"	f
OSTimeTick	UCOS-SRC/ETC/OS_CORE.C	/^void  OSTimeTick (void)$/;"	f
OSTimeTickHook	UCOS-CPU/OS_CPU_C.C	/^OSTimeTickHook ($/;"	f
OSUnMapTbl	UCOS-SRC/ETC/OS_CORE.C	/^INT8U  const  OSUnMapTbl[] = {$/;"	v
OSUsed	UCOS-INCLUDE/uCOS_II.H	/^    INT32U  OSUsed;                    \/* Number of bytes used on the stack                            *\/$/;"	m	struct:__anon8
OSValue	UCOS-INCLUDE/uCOS_II.H	/^    INT8U   OSValue;                        \/* Mutex value (0 = used, 1 = available)                   *\/$/;"	m	struct:__anon5
OSVersion	UCOS-SRC/ETC/OS_CORE.C	/^INT16U  OSVersion (void)$/;"	f
OS_ARG_CHK_EN	UCOS-INCLUDE/OS_CFG.H	40;"	d
OS_CPU_EXT	UCOS-INCLUDE/OS_CPU.H	20;"	d
OS_CPU_EXT	UCOS-INCLUDE/OS_CPU.H	22;"	d
OS_CPU_GLOBALS	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^#define  OS_CPU_GLOBALS$/;"	d
OS_CPU_HOOKS_EN	UCOS-INCLUDE/OS_CFG.H	41;"	d
OS_CPU_IRQ_ISR	UCOS-ARM/OS_CPU_A.S	/^OS_CPU_IRQ_ISR:$/;"	l
OS_CPU_IRQ_ISR_1	UCOS-ARM/OS_CPU_A.S	/^OS_CPU_IRQ_ISR_1:$/;"	l
OS_CPU_SR	UCOS-INCLUDE/OS_CPU.H	/^typedef unsigned short OS_CPU_SR;                \/* Define size of CPU status register (PSW = 16 bits) *\/$/;"	t
OS_CPU_SR_Restore	UCOS-ARM/OS_CPU_A.S	/^OS_CPU_SR_Restore:$/;"	l
OS_CPU_SR_Save	UCOS-ARM/OS_CPU_A.S	/^OS_CPU_SR_Save:$/;"	l
OS_CRITICAL_METHOD	UCOS-INCLUDE/OS_CPU.H	72;"	d
OS_DEL_ALWAYS	UCOS-INCLUDE/uCOS_II.H	150;"	d
OS_DEL_NO_PEND	UCOS-INCLUDE/uCOS_II.H	149;"	d
OS_ENTER_CRITICAL	UCOS-INCLUDE/OS_CPU.H	75;"	d
OS_ENTER_CRITICAL	UCOS-INCLUDE/OS_CPU.H	80;"	d
OS_ENTER_CRITICAL	UCOS-INCLUDE/OS_CPU.H	85;"	d
OS_ERR_CREATE_ISR	UCOS-INCLUDE/uCOS_II.H	141;"	d
OS_ERR_DEL_ISR	UCOS-INCLUDE/uCOS_II.H	140;"	d
OS_ERR_EVENT_TYPE	UCOS-INCLUDE/uCOS_II.H	89;"	d
OS_ERR_INVALID_OPT	UCOS-INCLUDE/uCOS_II.H	95;"	d
OS_ERR_NOT_MUTEX_OWNER	UCOS-INCLUDE/uCOS_II.H	136;"	d
OS_ERR_PEND_ISR	UCOS-INCLUDE/uCOS_II.H	90;"	d
OS_ERR_PEVENT_NULL	UCOS-INCLUDE/uCOS_II.H	92;"	d
OS_ERR_POST_ISR	UCOS-INCLUDE/uCOS_II.H	93;"	d
OS_ERR_POST_NULL_PTR	UCOS-INCLUDE/uCOS_II.H	91;"	d
OS_ERR_QUERY_ISR	UCOS-INCLUDE/uCOS_II.H	94;"	d
OS_ERR_TASK_WAITING	UCOS-INCLUDE/uCOS_II.H	96;"	d
OS_EVENT	UCOS-INCLUDE/uCOS_II.H	/^} OS_EVENT;$/;"	t	typeref:struct:__anon1
OS_EVENT_EN	UCOS-INCLUDE/uCOS_II.H	79;"	d
OS_EVENT_TBL_SIZE	UCOS-INCLUDE/uCOS_II.H	44;"	d
OS_EVENT_TYPE_MBOX	UCOS-INCLUDE/uCOS_II.H	60;"	d
OS_EVENT_TYPE_MUTEX	UCOS-INCLUDE/uCOS_II.H	63;"	d
OS_EVENT_TYPE_Q	UCOS-INCLUDE/uCOS_II.H	61;"	d
OS_EVENT_TYPE_SEM	UCOS-INCLUDE/uCOS_II.H	62;"	d
OS_EVENT_TYPE_UNUSED	UCOS-INCLUDE/uCOS_II.H	59;"	d
OS_EXIT_CRITICAL	UCOS-INCLUDE/OS_CPU.H	76;"	d
OS_EXIT_CRITICAL	UCOS-INCLUDE/OS_CPU.H	81;"	d
OS_EXIT_CRITICAL	UCOS-INCLUDE/OS_CPU.H	86;"	d
OS_EXT	UCOS-INCLUDE/uCOS_II.H	28;"	d
OS_EXT	UCOS-INCLUDE/uCOS_II.H	30;"	d
OS_GLOBALS	UCOS-SRC/ETC/OS_CORE.C	16;"	d	file:
OS_GLOBALS	UCOS-SRC/uCOS_II.C	14;"	d	file:
OS_IDLE_PRIO	UCOS-INCLUDE/uCOS_II.H	42;"	d
OS_LOWEST_PRIO	UCOS-INCLUDE/OS_CFG.H	32;"	d
OS_MASTER_FILE	UCOS-SRC/uCOS_II.C	17;"	d	file:
OS_MAX_EVENTS	UCOS-INCLUDE/OS_CFG.H	23;"	d
OS_MAX_MEM_PART	UCOS-INCLUDE/OS_CFG.H	25;"	d
OS_MAX_QS	UCOS-INCLUDE/OS_CFG.H	27;"	d
OS_MAX_TASKS	UCOS-INCLUDE/OS_CFG.H	29;"	d
OS_MBOX_DATA	UCOS-INCLUDE/uCOS_II.H	/^} OS_MBOX_DATA;$/;"	t	typeref:struct:__anon2
OS_MBOX_DEL_EN	UCOS-INCLUDE/OS_CFG.H	43;"	d
OS_MBOX_EN	UCOS-INCLUDE/OS_CFG.H	42;"	d
OS_MBOX_FULL	UCOS-INCLUDE/uCOS_II.H	101;"	d
OS_MEM	UCOS-INCLUDE/uCOS_II.H	/^} OS_MEM;$/;"	t	typeref:struct:__anon3
OS_MEM_DATA	UCOS-INCLUDE/uCOS_II.H	/^} OS_MEM_DATA;$/;"	t	typeref:struct:__anon4
OS_MEM_EN	UCOS-INCLUDE/OS_CFG.H	44;"	d
OS_MEM_FULL	UCOS-INCLUDE/uCOS_II.H	134;"	d
OS_MEM_INVALID_BLKS	UCOS-INCLUDE/uCOS_II.H	131;"	d
OS_MEM_INVALID_PART	UCOS-INCLUDE/uCOS_II.H	130;"	d
OS_MEM_INVALID_SIZE	UCOS-INCLUDE/uCOS_II.H	132;"	d
OS_MEM_NO_FREE_BLKS	UCOS-INCLUDE/uCOS_II.H	133;"	d
OS_MUTEX_AVAILABLE	UCOS-SRC/ETC/OS_MUTEX.C	28;"	d	file:
OS_MUTEX_DATA	UCOS-INCLUDE/uCOS_II.H	/^} OS_MUTEX_DATA;$/;"	t	typeref:struct:__anon5
OS_MUTEX_DEL_EN	UCOS-INCLUDE/OS_CFG.H	46;"	d
OS_MUTEX_EN	UCOS-INCLUDE/OS_CFG.H	45;"	d
OS_MUTEX_KEEP_LOWER_8	UCOS-SRC/ETC/OS_MUTEX.C	25;"	d	file:
OS_MUTEX_KEEP_UPPER_8	UCOS-SRC/ETC/OS_MUTEX.C	26;"	d	file:
OS_NO_ERR	UCOS-INCLUDE/uCOS_II.H	87;"	d
OS_NO_MORE_TCB	UCOS-INCLUDE/uCOS_II.H	116;"	d
OS_N_SYS_TASKS	UCOS-INCLUDE/uCOS_II.H	36;"	d
OS_N_SYS_TASKS	UCOS-INCLUDE/uCOS_II.H	38;"	d
OS_PRIO_ERR	UCOS-INCLUDE/uCOS_II.H	106;"	d
OS_PRIO_EXIST	UCOS-INCLUDE/uCOS_II.H	105;"	d
OS_PRIO_INVALID	UCOS-INCLUDE/uCOS_II.H	107;"	d
OS_PRIO_SELF	UCOS-INCLUDE/uCOS_II.H	33;"	d
OS_Q	UCOS-INCLUDE/uCOS_II.H	/^} OS_Q;$/;"	t	typeref:struct:os_q
OS_Q_DATA	UCOS-INCLUDE/uCOS_II.H	/^} OS_Q_DATA;$/;"	t	typeref:struct:__anon6
OS_Q_DEL_EN	UCOS-INCLUDE/OS_CFG.H	48;"	d
OS_Q_EN	UCOS-INCLUDE/OS_CFG.H	47;"	d
OS_Q_FULL	UCOS-INCLUDE/uCOS_II.H	103;"	d
OS_RDY_TBL_SIZE	UCOS-INCLUDE/uCOS_II.H	45;"	d
OS_SEM_DATA	UCOS-INCLUDE/uCOS_II.H	/^} OS_SEM_DATA;$/;"	t	typeref:struct:__anon7
OS_SEM_DEL_EN	UCOS-INCLUDE/OS_CFG.H	50;"	d
OS_SEM_EN	UCOS-INCLUDE/OS_CFG.H	49;"	d
OS_SEM_OVF	UCOS-INCLUDE/uCOS_II.H	109;"	d
OS_STAT_MBOX	UCOS-INCLUDE/uCOS_II.H	53;"	d
OS_STAT_MUTEX	UCOS-INCLUDE/uCOS_II.H	56;"	d
OS_STAT_PRIO	UCOS-INCLUDE/uCOS_II.H	41;"	d
OS_STAT_Q	UCOS-INCLUDE/uCOS_II.H	54;"	d
OS_STAT_RDY	UCOS-INCLUDE/uCOS_II.H	51;"	d
OS_STAT_SEM	UCOS-INCLUDE/uCOS_II.H	52;"	d
OS_STAT_SUSPEND	UCOS-INCLUDE/uCOS_II.H	55;"	d
OS_STK	UCOS-INCLUDE/OS_CPU.H	/^typedef unsigned int   OS_STK;                   \/* Each stack entry is 16-bit wide                    *\/$/;"	t
OS_STK	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^OS_STK *OSTaskStkInit (void (*task)(void *pd), void *pdata, OS_STK *ptos, INT16U opt)$/;"	l
OS_STK_DATA	UCOS-INCLUDE/uCOS_II.H	/^} OS_STK_DATA;$/;"	t	typeref:struct:__anon8
OS_STK_GROWTH	UCOS-INCLUDE/OS_CPU.H	95;"	d
OS_TASK_CHANGE_PRIO_EN	UCOS-INCLUDE/OS_CFG.H	51;"	d
OS_TASK_CREATE_EN	UCOS-INCLUDE/OS_CFG.H	52;"	d
OS_TASK_CREATE_EXT_EN	UCOS-INCLUDE/OS_CFG.H	53;"	d
OS_TASK_DEL_EN	UCOS-INCLUDE/OS_CFG.H	54;"	d
OS_TASK_DEL_ERR	UCOS-INCLUDE/uCOS_II.H	111;"	d
OS_TASK_DEL_IDLE	UCOS-INCLUDE/uCOS_II.H	112;"	d
OS_TASK_DEL_ISR	UCOS-INCLUDE/uCOS_II.H	114;"	d
OS_TASK_DEL_REQ	UCOS-INCLUDE/uCOS_II.H	113;"	d
OS_TASK_IDLE_ID	UCOS-INCLUDE/uCOS_II.H	47;"	d
OS_TASK_IDLE_STK_SIZE	UCOS-INCLUDE/OS_CFG.H	35;"	d
OS_TASK_NOT_EXIST	UCOS-INCLUDE/uCOS_II.H	99;"	d
OS_TASK_NOT_SUSPENDED	UCOS-INCLUDE/uCOS_II.H	128;"	d
OS_TASK_OPT_ERR	UCOS-INCLUDE/uCOS_II.H	138;"	d
OS_TASK_OPT_SAVE_FP	UCOS-INCLUDE/uCOS_II.H	68;"	d
OS_TASK_OPT_STK_CHK	UCOS-INCLUDE/uCOS_II.H	66;"	d
OS_TASK_OPT_STK_CLR	UCOS-INCLUDE/uCOS_II.H	67;"	d
OS_TASK_RESUME_PRIO	UCOS-INCLUDE/uCOS_II.H	127;"	d
OS_TASK_STAT_EN	UCOS-INCLUDE/OS_CFG.H	37;"	d
OS_TASK_STAT_ID	UCOS-INCLUDE/uCOS_II.H	48;"	d
OS_TASK_STAT_STK_SIZE	UCOS-INCLUDE/OS_CFG.H	38;"	d
OS_TASK_SUSPEND_EN	UCOS-INCLUDE/OS_CFG.H	55;"	d
OS_TASK_SUSPEND_IDLE	UCOS-INCLUDE/uCOS_II.H	125;"	d
OS_TASK_SUSPEND_PRIO	UCOS-INCLUDE/uCOS_II.H	124;"	d
OS_TASK_SW	UCOS-INCLUDE/OS_CPU.H	99;"	d
OS_TCB	UCOS-INCLUDE/uCOS_II.H	/^} OS_TCB;$/;"	t	typeref:struct:os_tcb
OS_TICKS_PER_SEC	UCOS-INCLUDE/OS_CFG.H	57;"	d
OS_TIMEOUT	UCOS-INCLUDE/uCOS_II.H	98;"	d
OS_TIME_INVALID_MILLI	UCOS-INCLUDE/uCOS_II.H	121;"	d
OS_TIME_INVALID_MINUTES	UCOS-INCLUDE/uCOS_II.H	119;"	d
OS_TIME_INVALID_SECONDS	UCOS-INCLUDE/uCOS_II.H	120;"	d
OS_TIME_NOT_DLY	UCOS-INCLUDE/uCOS_II.H	118;"	d
OS_TIME_ZERO_DLY	UCOS-INCLUDE/uCOS_II.H	122;"	d
OS_VERSION	UCOS-INCLUDE/uCOS_II.H	25;"	d
PC_DOSReturn	TRASH/PC.C	/^void PC_DOSReturn (void)$/;"	f
PC_DOSSaveReturn	TRASH/PC.C	/^void PC_DOSSaveReturn (void)$/;"	f
PC_DispChar	TRASH/PC.C	/^void PC_DispChar (INT8U x, INT8U y, INT8U c, INT8U color)$/;"	f
PC_DispClrCol	TRASH/PC.C	/^void PC_DispClrCol (INT8U x, INT8U color)$/;"	f
PC_DispClrRow	TRASH/PC.C	/^void PC_DispClrRow (INT8U y, INT8U color)$/;"	f
PC_DispClrScr	TRASH/PC.C	/^void PC_DispClrScr (INT8U color)$/;"	f
PC_DispStr	TRASH/PC.C	/^void PC_DispStr (INT8U x, INT8U y, INT8U *s, INT8U color)$/;"	f
PC_ElapsedInit	TRASH/PC.C	/^void PC_ElapsedInit(void)$/;"	f
PC_ElapsedOverhead	TRASH/PC.C	/^static INT16U    PC_ElapsedOverhead;$/;"	v	file:
PC_ElapsedStart	TRASH/PC.C	/^void PC_ElapsedStart(void)$/;"	f
PC_ElapsedStop	TRASH/PC.C	/^INT16U PC_ElapsedStop(void)$/;"	f
PC_ExitFlag	TRASH/PC.C	/^static BOOLEAN   PC_ExitFlag;$/;"	v	file:
PC_GetDateTime	TRASH/PC.C	/^void PC_GetDateTime (char *s)$/;"	f
PC_GetKey	TRASH/PC.C	/^BOOLEAN PC_GetKey (INT16S *c)$/;"	f
PC_JumpBuf	TRASH/PC.C	/^static jmp_buf   PC_JumpBuf;$/;"	v	file:
PC_SetTickRate	TRASH/PC.C	/^void PC_SetTickRate (INT16U freq)$/;"	f
PC_TickISR	TRASH/PC.C	/^void           (*PC_TickISR)(void);$/;"	v
PC_VectGet	TRASH/PC.C	/^void *PC_VectGet (INT8U vect)$/;"	f
PC_VectSet	TRASH/PC.C	/^void PC_VectSet (INT8U vect, void (*isr)(void))$/;"	f
POP	UCOS-ARM/OS_CPU_A.ASM	/^            POP    DS                              ; Load new task's context$/;"	d
POP	UCOS-ARM/OS_CPU_A.ASM	/^            POP    DS                             ; Load task's context$/;"	d
POP	UCOS-ARM/OS_CPU_A.ASM	/^            POP    DS                            ; Restore interrupted task's context$/;"	d
PUSH	UCOS-ARM/OS_CPU_A.ASM	/^            PUSH   DS                              ;$/;"	d
PUSH	UCOS-ARM/OS_CPU_A.ASM	/^            PUSH   DS$/;"	d
ROOT	makefile	/^ROOT=\/home\/abby\/NEW\/$/;"	m
RandomSem	TRASH/TEST.C	/^OS_EVENT        *RandomSem;$/;"	v
TASK_STK_SIZE	TRASH/TEST.C	23;"	d	file:
TICK_T0_8254_CTR0	TRASH/PC.C	25;"	d	file:
TICK_T0_8254_CTR0_MODE3	TRASH/PC.C	29;"	d	file:
TICK_T0_8254_CTR1	TRASH/PC.C	26;"	d	file:
TICK_T0_8254_CTR2	TRASH/PC.C	27;"	d	file:
TICK_T0_8254_CTR2_LATCH	TRASH/PC.C	31;"	d	file:
TICK_T0_8254_CTR2_MODE0	TRASH/PC.C	30;"	d	file:
TICK_T0_8254_CWR	TRASH/PC.C	24;"	d	file:
TRUE	UCOS-INCLUDE/uCOS_II.H	76;"	d
Task	TRASH/TEST.C	/^void Task (void *data)$/;"	f
TaskData	TRASH/TEST.C	/^char             TaskData[N_TASKS];                   \/* Parameters to pass to each task               *\/$/;"	v
TaskFPUFlag	TRASH/TEST.C	/^INT16U           TaskFPUFlag;$/;"	v
TaskStart	TRASH/TEST.C	/^void TaskStart (void *data)$/;"	f
TaskStartStk	TRASH/TEST.C	/^OS_STK           TaskStartStk[TASK_STK_SIZE];$/;"	v
TaskStk	TRASH/TEST.C	/^OS_STK           TaskStk[N_TASKS][TASK_STK_SIZE];     \/* Tasks stacks                                  *\/$/;"	v
UBYTE	UCOS-INCLUDE/OS_CPU.H	46;"	d
UCOS-ARM	makefile	/^UCOS-ARM=${APP}UCOS-ARM$/;"	m
UCOS-CPU	makefile	/^UCOS-CPU=${APP}UCOS-CPU\/$/;"	m
UCOS-INCLUDE	makefile	/^UCOS-INCLUDE=${APP}UCOS-INCLUDE\/$/;"	m
UCOS-SRC	makefile	/^UCOS-SRC=${APP}UCOS-SRC\/$/;"	m
ULONG	UCOS-INCLUDE/OS_CPU.H	50;"	d
UWORD	UCOS-INCLUDE/OS_CPU.H	48;"	d
VECT_DOS_CHAIN	TRASH/PC.C	34;"	d	file:
VECT_TICK	TRASH/PC.C	33;"	d	file:
WORD	UCOS-INCLUDE/OS_CPU.H	47;"	d
_ASMLANGUAGE	UCOS-ARM/OS_CPU_A.S	/^#define _ASMLANGUAGE$/;"	d
_OSCtxSw	UCOS-ARM/OS_CPU_A.ASM	/^_OSCtxSw    PROC   FAR$/;"	l
_OSIntCtxSw	UCOS-ARM/OS_CPU_A.ASM	/^_OSIntCtxSw PROC   FAR$/;"	l
_OSStartHighRdy	UCOS-ARM/OS_CPU_A.ASM	/^_OSStartHighRdy  PROC FAR$/;"	l
_OSTickISR	UCOS-ARM/OS_CPU_A.ASM	/^_OSTickISR  PROC   FAR$/;"	l
_OSTickISR1	UCOS-ARM/OS_CPU_A.ASM	/^_OSTickISR1:$/;"	l
_OSTickISR2	UCOS-ARM/OS_CPU_A.ASM	/^_OSTickISR2:$/;"	l
bytes	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    bytes    = *psize * sizeof(OS_STK);               \/* Determine how many bytes for the stack        *\/$/;"	d
bytes	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    bytes    = bytes - 16;                            \/* Loose 16 bytes because of alignment           *\/$/;"	d
bytes	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    bytes    = bytes - 384;$/;"	d
lin_bos	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    lin_bos  = (lin_tos - bytes + 15) & 0xFFFFFFF0L;  \/* Ensure paragraph alignment for BOS            *\/$/;"	d
lin_tos	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    lin_tos  = ((INT32U)seg << 4) + (INT32U)off;      \/* Convert seg:off to linear address             *\/$/;"	d
main	TRASH/TEST.C	/^void main (void)$/;"	f
main	UCOS-SRC/TEST.C	/^int main()$/;"	f
off	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    off      = FP_OFF(*pptos);$/;"	d
opt	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    opt    = opt;                           \/* 'opt' is not used, prevent warning                      *\/$/;"	d
os_q	UCOS-INCLUDE/uCOS_II.H	/^typedef struct os_q {                   \/* QUEUE CONTROL BLOCK                                         *\/$/;"	s
os_tcb	UCOS-INCLUDE/uCOS_II.H	/^typedef struct os_tcb {$/;"	s
ptcb	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    ptcb = ptcb;                                           \/* Prevent Compiler warning                 *\/$/;"	d
ptcb	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    ptcb = ptcb;                       \/* Prevent compiler warning                                     *\/$/;"	d
seg	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    seg      = (INT16U)(lin_bos >> 4);                \/* Get new 'normalized' segment                  *\/$/;"	d
seg	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    seg      = FP_SEG(*pptos);                        \/* Decompose top-of-stack pointer into seg:off   *\/$/;"	d
stk	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^    stk    = (INT16U *)ptos;                \/* Load stack pointer                                      *\/$/;"	d
uCOS	UCOS-INCLUDE/OS_CPU.H	97;"	d
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void  OSTaskStkInit_FPE_x86 (OS_STK **pptos, OS_STK **ppbos, INT32U *psize)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSInitHookBegin (void)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSInitHookEnd (void)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSTCBInitHook (OS_TCB *ptcb)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSTaskCreateHook (OS_TCB *ptcb)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSTaskDelHook (OS_TCB *ptcb)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSTaskStatHook (void)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSTaskSwHook (void)$/;"	l
void	UCOS-SRC/ETC/OS_CPU_C.C.X86	/^void OSTimeTickHook (void)$/;"	l
